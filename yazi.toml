[mgr]
ratio = [2, 3, 4]
sort_by = "natural"
sort_dir_first = true
linemode = "size"
scrolloff = 5
show_hidden = false
title_format = "Luis position: {cwd}"

[preview]
wrap = "no"
tab_size = 5
max_width = 1800
max_height = 1200
cache_dir = "$HOME/.yazi/Caches"
image_delay = 30
image_filter = "triangle"
image_quality = 85
sixel_fraction = 15
ueberzug_scale = 1
ueberzug_offset = [0, 0, 0, 0]

[opener]
edit = [
  { run = '$EDITOR "$@"', block = true, desc = "$EDITOR", for = "unix" },
  { run = 'nvim "$@"', desc = "Neovim (Linux)", block = true, for = "unix" },
  { run = 'emacs "$@"', desc = "emacs (Linux)", block = true, for = "unix" },
  # { run = '${EDITOR:-vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
  { run = 'code %*', orphan = true, desc = "code", for = "windows" },
  { run = 'code -w %*', block = true, desc = "code (block)", for = "windows" },
]

document = [
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "unix" },
  { run = 'zathura "$@"', orphan = true, desc = "zathura", for = "unix" },
  { run = 'libreoffice "$@"', orphan = true, desc = "libreoffice", for = "unix" },
]

image = [
  # { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "unix" },
  # sudo pacman -S qimgv
  { run = 'nsxiv "$@"', orphan = true, desc = "nsxiv", for = "unix" },
  { run = 'qimgv "$@"', orphan = true, desc = "qimgv", for = "unix" },
  { run = 'krita "$@"', orphan = true, desc = "krita", for = "unix" },
  { run = 'satty --filename "$@"', orphan = true, desc = "satty", for = "unix" },
]

open = [
  { run = 'xdg-open "$1"', desc = "Open", for = "unix" },
  { run = 'open "$@"', desc = "Open", for = "macos" },
  { run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]

reveal = [
  { run = 'xdg-open "$(dirname "$1")"', desc = "Reveal", for = "unix" },
  { run = 'open -R "$1"', desc = "Reveal", for = "macos" },
  { run = 'explorer /select,"%1"', orphan = true, desc = "Reveal", for = "windows" },
  { run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]

extract = [
  { run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
  { run = 'ya pub extract --list %*', desc = "Extract here", for = "windows" },
]

play = [
  { run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
  { run = 'vlc "$@"', orphan = true, desc = "vlc", for = "unix" },
  { run = 'mpv --force-window %*', orphan = true, for = "windows" },
  { run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]

[open]
rules = [
  # Folder
  { name = "*/", use = ["edit", "open", "reveal"] },
  # Text
  { mime = "text/*", use = ["edit", "reveal"] },
  # Image
  { mime = "image/*", use = ["image"] },
  # Media
  { mime = "{audio,video}/*", use = ["play", "reveal"] },
  # Archive
  # { mime = "application/{,g}zip", use = ["extract", "reveal"] },
  # { mime = "application/{tar,bzip*,7z*,xz,rar}", use = ["extract", "reveal"] },
  # { mime = "application/pdf", use = "document" },
  { mime = "application/zip", use = ["extract", "reveal"] },
  { mime = "application/gzip", use = ["extract", "reveal"] },
  { mime = "application/tar", use = ["extract", "reveal"] },
  { mime = "application/gtar", use = ["extract", "reveal"] },
  { mime = "application/bzip", use = ["extract", "reveal"] },
  { mime = "application/bzip2", use = ["extract", "reveal"] },
  { mime = "application/7z-compressed", use = ["extract", "reveal"] },
  { mime = "application/rar", use = ["extract", "reveal"] },
  { mime = "application/xz", use = ["extract", "reveal"] },
  { mime = "application/zstd", use = ["extract", "reveal"] },
  { mime = "application/epub+zip", use = "document" },
  { mime = "application/x-mobipocket-ebook", use = "document" },
  # JSON
  { mime = "application/{json,ndjson}", use = ["edit", "reveal"] },
  { mime = "*/javascript", use = ["edit", "reveal"] },
  #  NOTE: use nvim to open srt file with default
  { mime = "application/subrip", use = ["edit", "reveal"] },
  # Empty file
  { mime = "inode/empty", use = ["edit", "reveal"] },
  # Fallback
  { name = "*", use = ["open", "reveal"] },
]

[tasks]
micro_workers = 10
macro_workers = 25
bizarre_retry = 5
image_alloc = 536870912  # 512MB
image_bound = [0, 0]
suppress_preload = false

[plugin]

fetchers = [
  # Mimetype
  { id = "mime", name = "*", run = "mime", if = "!mime", prio = "high" },
]
spotters = [
  { name = "*/", run = "folder" },
  # Code
  { mime = "text/*", run = "code" },
  { mime = "*/{xml,javascript,wine-extension-ini}", run = "code" },
  # Image
  { mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
  { mime = "image/*", run = "image" },
  # Video
  { mime = "video/*", run = "video" },
  # SRT
  { mime = "application/subrip", run = "code" },
  # Fallback
  { name = "*", run = "file" },
]
preloaders = [
  # Image
  { mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
  { mime = "image/*", run = "image" },
  # Video
  { mime = "video/*", run = "video" },
  # PDF
  { mime = "application/pdf", run = "pdf" },
  # Font
  { mime = "font/*", run = "font" },
  { mime = "application/ms-opentype", run = "font" },
]

prepend_previewers = [
  { name = "application/bittorrent", run = "torrent-preview" },
  # NOTE: sudo pacman -S exiftool
  { mime = "audio/*", run = "exifaudio" },
]

previewers = [
  { name = "*/", run = "folder", sync = true },
  # Code
  { mime = "text/*", run = "code" },
  { mime = "*/{xml,javascript,wine-extension-ini}", run = "code" },
  # JSON
  { mime = "application/{json,ndjson}", run = "json" },
  # Image
  { mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
  { mime = "image/*", run = "image" },
  # Video
  { mime = "video/*", run = "video" },
  # PDF
  { mime = "application/pdf", run = "pdf" },
  # SRT
  { mime = "application/subrip", run = "code" },
  # Archive
  { mime = "application/{,g}zip", run = "archive" },
  { mime = "application/{tar,bzip*,7z*,xz,rar,iso9660-image,lzma,compress,cpio,arj,xar,ms-cab*}", run = "archive" },
  { name = "application/*.{img,fat,ext,ext2,ext3,ext4,squashfs,ntfs,hfs,hfsx}", run = "archive" },
  # Font
  { mime = "font/*", run = "font" },
  { mime = "application/ms-opentype", run = "font" },
  # Empty file
  { mime = "inode/empty", run = "empty" },
  # Fallback
  { name = "*", run = "file" },
]

[input]
cursor_blink = false

# cd
cd_title = "Change directory:"
cd_origin = "top-center"
cd_offset = [0, 2, 50, 3]

# create
create_title = ["Create:", "Create (dir):"]
create_origin = "top-center"
create_offset = [0, 2, 50, 3]

# rename
rename_title = "Rename:"
rename_origin = "hovered"
rename_offset = [0, 1, 50, 3]

# filter
filter_title = "Filter:"
filter_origin = "top-center"
filter_offset = [0, 2, 50, 3]

# find
find_title = ["Find next:", "Find previous:"]
find_origin = "top-center"
find_offset = [0, 2, 50, 3]

# search
search_title = "Search via {n}:"
search_origin = "top-center"
search_offset = [0, 2, 50, 3]

# shell
shell_title = ["Shell:", "Shell (block):"]
shell_origin = "top-center"
shell_offset = [0, 2, 50, 3]

[confirm]
# trash
trash_title = "Trash {n} selected file{s}?"
trash_origin = "center"
trash_offset = [0, 0, 70, 20]

# delete
delete_title = "Permanently delete {n} selected file{s}?"
delete_origin = "center"
delete_offset = [0, 0, 70, 20]

# overwrite
overwrite_title = "Overwrite file?"
overwrite_content = "Will overwrite the following file:"
overwrite_origin = "center"
overwrite_offset = [0, 0, 50, 15]

# quit
quit_title = "Quit?"
quit_content = "The following task is still running, are you sure you want to quit?"
quit_origin = "center"
quit_offset = [0, 0, 50, 15]

[pick]
open_title = "Open with:"
open_origin = "hovered"
open_offset = [0, 1, 50, 7]

[which]
sort_by = "none"
sort_sensitive = false
sort_reverse = false
sort_translit = false

[[plugin.prepend_fetchers]]
id = "git"
name = "*"
run = "git"

[[plugin.prepend_fetchers]]
id = "git"
name = "*/"
run = "git"
